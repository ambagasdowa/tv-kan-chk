[tool.black]
line-length = 100

include = '\.pyi?$'

exclude = '''
(
      __pycache__
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.vscode
    | \.venv
    | \bdist\b
    | \bdoc\b
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3


[build-system]
requires = ["setuptools", "setuptools-scm","wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tv-kan-chk"
version = tvKanChk.VERSION
description = "Command online TV tools"
authors = [
  { name="Jesus Baizabal", email="baizabal.jesus@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.5"
keywords = ["cat","mx","iptv","commandline","tv online" ]
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "rich","httpie","Jinja2","m3u8","ipytv"
]
[project.urls]
"Homepage" = "https://github.com/ambagasdowa/tv-kan-chk"
"Bug Tracker" = "https://github.com/ambagasdowa/tv-kan-chk/issues"
[project.scripts]
tv-kan-chk = "tv-kan-chk.tv-kan-chk:main"

[tool.setuptools]
package-dir = {"" = "./"}  # directory containing all the packages (e.g.  src/mypkg1, src/mypkg2)

# By default, include-package-data is true in pyproject.toml, so you do
# NOT have to specify this line.
# include-package-data = true

[tool.setuptools.packages]
find = {}  # Scanning implicit namespaces is active by default

#dynamic = ["version"]
# [tool.setuptools.packages.find]
# # namespaces = true
# where = ["tv-kan-chk"]

[tool.setuptools.package-data]
"*" = ["*.xml"]
#"tv-kan-chk.templates.michelin" = ["*.xml", "*.html"]

#[project.optional-dependencies]
#pdf = ["ReportLab>=1.2", "RXP"]
#rest = ["docutils>=0.3", "pack ==1.1, ==1.3"]
#
#[project.scripts]
#my-script = "my_package.module:function"

# ... other project metadata fields as specified in:
#     https://packaging.python.org/en/latest/specifications/declaring-project-metadata/


